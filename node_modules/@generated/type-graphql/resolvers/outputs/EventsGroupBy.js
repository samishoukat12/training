"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventsGroupBy = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const EventsCountAggregate_1 = require("../outputs/EventsCountAggregate");
const EventsMaxAggregate_1 = require("../outputs/EventsMaxAggregate");
const EventsMinAggregate_1 = require("../outputs/EventsMinAggregate");
let EventsGroupBy = class EventsGroupBy {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], EventsGroupBy.prototype, "id", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], EventsGroupBy.prototype, "eventName", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], EventsGroupBy.prototype, "eventDesc", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", String)
], EventsGroupBy.prototype, "eventImage", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => Date, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Date)
], EventsGroupBy.prototype, "eventDate", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], EventsGroupBy.prototype, "speakerId", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => EventsCountAggregate_1.EventsCountAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", EventsCountAggregate_1.EventsCountAggregate)
], EventsGroupBy.prototype, "_count", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => EventsMinAggregate_1.EventsMinAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", EventsMinAggregate_1.EventsMinAggregate)
], EventsGroupBy.prototype, "_min", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => EventsMaxAggregate_1.EventsMaxAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", EventsMaxAggregate_1.EventsMaxAggregate)
], EventsGroupBy.prototype, "_max", void 0);
EventsGroupBy = (0, tslib_1.__decorate)([
    TypeGraphQL.ObjectType("EventsGroupBy", {
        isAbstract: true
    })
], EventsGroupBy);
exports.EventsGroupBy = EventsGroupBy;
