"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CategoryGroupBy = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const CategoryCountAggregate_1 = require("../outputs/CategoryCountAggregate");
const CategoryMaxAggregate_1 = require("../outputs/CategoryMaxAggregate");
const CategoryMinAggregate_1 = require("../outputs/CategoryMinAggregate");
let CategoryGroupBy = class CategoryGroupBy {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], CategoryGroupBy.prototype, "id", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], CategoryGroupBy.prototype, "categoryName", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], CategoryGroupBy.prototype, "imageUrl", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => Date, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Date)
], CategoryGroupBy.prototype, "createdAt", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => Date, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Date)
], CategoryGroupBy.prototype, "updateAt", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => CategoryCountAggregate_1.CategoryCountAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", CategoryCountAggregate_1.CategoryCountAggregate)
], CategoryGroupBy.prototype, "_count", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => CategoryMinAggregate_1.CategoryMinAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", CategoryMinAggregate_1.CategoryMinAggregate)
], CategoryGroupBy.prototype, "_min", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => CategoryMaxAggregate_1.CategoryMaxAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", CategoryMaxAggregate_1.CategoryMaxAggregate)
], CategoryGroupBy.prototype, "_max", void 0);
CategoryGroupBy = (0, tslib_1.__decorate)([
    TypeGraphQL.ObjectType("CategoryGroupBy", {
        isAbstract: true
    })
], CategoryGroupBy);
exports.CategoryGroupBy = CategoryGroupBy;
