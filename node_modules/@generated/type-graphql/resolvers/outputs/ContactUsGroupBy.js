"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContactUsGroupBy = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const ContactUsCountAggregate_1 = require("../outputs/ContactUsCountAggregate");
const ContactUsMaxAggregate_1 = require("../outputs/ContactUsMaxAggregate");
const ContactUsMinAggregate_1 = require("../outputs/ContactUsMinAggregate");
const ContactUsStatus_1 = require("../../enums/ContactUsStatus");
let ContactUsGroupBy = class ContactUsGroupBy {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], ContactUsGroupBy.prototype, "id", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], ContactUsGroupBy.prototype, "name", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], ContactUsGroupBy.prototype, "subject", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], ContactUsGroupBy.prototype, "message", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => ContactUsStatus_1.ContactUsStatus, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], ContactUsGroupBy.prototype, "status", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], ContactUsGroupBy.prototype, "reply", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => ContactUsCountAggregate_1.ContactUsCountAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", ContactUsCountAggregate_1.ContactUsCountAggregate)
], ContactUsGroupBy.prototype, "_count", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => ContactUsMinAggregate_1.ContactUsMinAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", ContactUsMinAggregate_1.ContactUsMinAggregate)
], ContactUsGroupBy.prototype, "_min", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => ContactUsMaxAggregate_1.ContactUsMaxAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", ContactUsMaxAggregate_1.ContactUsMaxAggregate)
], ContactUsGroupBy.prototype, "_max", void 0);
ContactUsGroupBy = (0, tslib_1.__decorate)([
    TypeGraphQL.ObjectType("ContactUsGroupBy", {
        isAbstract: true
    })
], ContactUsGroupBy);
exports.ContactUsGroupBy = ContactUsGroupBy;
