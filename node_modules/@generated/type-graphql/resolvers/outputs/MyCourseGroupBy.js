"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MyCourseGroupBy = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const MyCourseCountAggregate_1 = require("../outputs/MyCourseCountAggregate");
const MyCourseMaxAggregate_1 = require("../outputs/MyCourseMaxAggregate");
const MyCourseMinAggregate_1 = require("../outputs/MyCourseMinAggregate");
const FeeStatus_1 = require("../../enums/FeeStatus");
let MyCourseGroupBy = class MyCourseGroupBy {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], MyCourseGroupBy.prototype, "id", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], MyCourseGroupBy.prototype, "coursesId", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], MyCourseGroupBy.prototype, "studentId", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => Date, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Date)
], MyCourseGroupBy.prototype, "createdAt", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => Date, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Date)
], MyCourseGroupBy.prototype, "updateAt", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => Boolean, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Boolean)
], MyCourseGroupBy.prototype, "courseApproval", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], MyCourseGroupBy.prototype, "whyReject", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => FeeStatus_1.FeeStatus, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], MyCourseGroupBy.prototype, "feeStatus", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], MyCourseGroupBy.prototype, "courseBatchesId", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => MyCourseCountAggregate_1.MyCourseCountAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", MyCourseCountAggregate_1.MyCourseCountAggregate)
], MyCourseGroupBy.prototype, "_count", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => MyCourseMinAggregate_1.MyCourseMinAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", MyCourseMinAggregate_1.MyCourseMinAggregate)
], MyCourseGroupBy.prototype, "_min", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => MyCourseMaxAggregate_1.MyCourseMaxAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", MyCourseMaxAggregate_1.MyCourseMaxAggregate)
], MyCourseGroupBy.prototype, "_max", void 0);
MyCourseGroupBy = (0, tslib_1.__decorate)([
    TypeGraphQL.ObjectType("MyCourseGroupBy", {
        isAbstract: true
    })
], MyCourseGroupBy);
exports.MyCourseGroupBy = MyCourseGroupBy;
