"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SpeakerGroupBy = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const SpeakerCountAggregate_1 = require("../outputs/SpeakerCountAggregate");
const SpeakerMaxAggregate_1 = require("../outputs/SpeakerMaxAggregate");
const SpeakerMinAggregate_1 = require("../outputs/SpeakerMinAggregate");
let SpeakerGroupBy = class SpeakerGroupBy {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], SpeakerGroupBy.prototype, "id", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], SpeakerGroupBy.prototype, "speakerName", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], SpeakerGroupBy.prototype, "spkearDesc", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], SpeakerGroupBy.prototype, "spekaerImage", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => Date, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Date)
], SpeakerGroupBy.prototype, "createdAt", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => Date, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Date)
], SpeakerGroupBy.prototype, "updateAt", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => SpeakerCountAggregate_1.SpeakerCountAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", SpeakerCountAggregate_1.SpeakerCountAggregate)
], SpeakerGroupBy.prototype, "_count", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => SpeakerMinAggregate_1.SpeakerMinAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", SpeakerMinAggregate_1.SpeakerMinAggregate)
], SpeakerGroupBy.prototype, "_min", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => SpeakerMaxAggregate_1.SpeakerMaxAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", SpeakerMaxAggregate_1.SpeakerMaxAggregate)
], SpeakerGroupBy.prototype, "_max", void 0);
SpeakerGroupBy = (0, tslib_1.__decorate)([
    TypeGraphQL.ObjectType("SpeakerGroupBy", {
        isAbstract: true
    })
], SpeakerGroupBy);
exports.SpeakerGroupBy = SpeakerGroupBy;
