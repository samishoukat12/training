"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CoursesGroupBy = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const GraphQLScalars = (0, tslib_1.__importStar)(require("graphql-scalars"));
const CoursesCountAggregate_1 = require("../outputs/CoursesCountAggregate");
const CoursesMaxAggregate_1 = require("../outputs/CoursesMaxAggregate");
const CoursesMinAggregate_1 = require("../outputs/CoursesMinAggregate");
const Status_1 = require("../../enums/Status");
let CoursesGroupBy = class CoursesGroupBy {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], CoursesGroupBy.prototype, "id", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], CoursesGroupBy.prototype, "courseName", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], CoursesGroupBy.prototype, "courseDesc", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], CoursesGroupBy.prototype, "courseIntro", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], CoursesGroupBy.prototype, "instructorId", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], CoursesGroupBy.prototype, "courseCategoryId", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => Date, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Date)
], CoursesGroupBy.prototype, "createdAt", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => Date, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Date)
], CoursesGroupBy.prototype, "updateAt", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => Status_1.Status, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], CoursesGroupBy.prototype, "courseStatus", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [GraphQLScalars.JSONResolver], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], CoursesGroupBy.prototype, "whatYouLearn", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], CoursesGroupBy.prototype, "coursePrice", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => CoursesCountAggregate_1.CoursesCountAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", CoursesCountAggregate_1.CoursesCountAggregate)
], CoursesGroupBy.prototype, "_count", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => CoursesMinAggregate_1.CoursesMinAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", CoursesMinAggregate_1.CoursesMinAggregate)
], CoursesGroupBy.prototype, "_min", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => CoursesMaxAggregate_1.CoursesMaxAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", CoursesMaxAggregate_1.CoursesMaxAggregate)
], CoursesGroupBy.prototype, "_max", void 0);
CoursesGroupBy = (0, tslib_1.__decorate)([
    TypeGraphQL.ObjectType("CoursesGroupBy", {
        isAbstract: true
    })
], CoursesGroupBy);
exports.CoursesGroupBy = CoursesGroupBy;
