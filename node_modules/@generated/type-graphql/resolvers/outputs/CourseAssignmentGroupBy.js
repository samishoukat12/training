"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CourseAssignmentGroupBy = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const CourseAssignmentCountAggregate_1 = require("../outputs/CourseAssignmentCountAggregate");
const CourseAssignmentMaxAggregate_1 = require("../outputs/CourseAssignmentMaxAggregate");
const CourseAssignmentMinAggregate_1 = require("../outputs/CourseAssignmentMinAggregate");
let CourseAssignmentGroupBy = class CourseAssignmentGroupBy {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], CourseAssignmentGroupBy.prototype, "id", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], CourseAssignmentGroupBy.prototype, "name", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], CourseAssignmentGroupBy.prototype, "courseBatchesId", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], CourseAssignmentGroupBy.prototype, "coursesId", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => Date, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Date)
], CourseAssignmentGroupBy.prototype, "createdAt", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => Date, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Date)
], CourseAssignmentGroupBy.prototype, "updateAt", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => CourseAssignmentCountAggregate_1.CourseAssignmentCountAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", CourseAssignmentCountAggregate_1.CourseAssignmentCountAggregate)
], CourseAssignmentGroupBy.prototype, "_count", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => CourseAssignmentMinAggregate_1.CourseAssignmentMinAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", CourseAssignmentMinAggregate_1.CourseAssignmentMinAggregate)
], CourseAssignmentGroupBy.prototype, "_min", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => CourseAssignmentMaxAggregate_1.CourseAssignmentMaxAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", CourseAssignmentMaxAggregate_1.CourseAssignmentMaxAggregate)
], CourseAssignmentGroupBy.prototype, "_max", void 0);
CourseAssignmentGroupBy = (0, tslib_1.__decorate)([
    TypeGraphQL.ObjectType("CourseAssignmentGroupBy", {
        isAbstract: true
    })
], CourseAssignmentGroupBy);
exports.CourseAssignmentGroupBy = CourseAssignmentGroupBy;
