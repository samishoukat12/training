"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LecturesGroupBy = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const LecturesCountAggregate_1 = require("../outputs/LecturesCountAggregate");
const LecturesMaxAggregate_1 = require("../outputs/LecturesMaxAggregate");
const LecturesMinAggregate_1 = require("../outputs/LecturesMinAggregate");
let LecturesGroupBy = class LecturesGroupBy {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], LecturesGroupBy.prototype, "id", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], LecturesGroupBy.prototype, "lectureTitle", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], LecturesGroupBy.prototype, "lectureVideo", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], LecturesGroupBy.prototype, "coursesId", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => Date, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Date)
], LecturesGroupBy.prototype, "createdAt", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => Date, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Date)
], LecturesGroupBy.prototype, "updateAt", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => LecturesCountAggregate_1.LecturesCountAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", LecturesCountAggregate_1.LecturesCountAggregate)
], LecturesGroupBy.prototype, "_count", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => LecturesMinAggregate_1.LecturesMinAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", LecturesMinAggregate_1.LecturesMinAggregate)
], LecturesGroupBy.prototype, "_min", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => LecturesMaxAggregate_1.LecturesMaxAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", LecturesMaxAggregate_1.LecturesMaxAggregate)
], LecturesGroupBy.prototype, "_max", void 0);
LecturesGroupBy = (0, tslib_1.__decorate)([
    TypeGraphQL.ObjectType("LecturesGroupBy", {
        isAbstract: true
    })
], LecturesGroupBy);
exports.LecturesGroupBy = LecturesGroupBy;
