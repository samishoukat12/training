"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MyCartGroupBy = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const MyCartCountAggregate_1 = require("../outputs/MyCartCountAggregate");
const MyCartMaxAggregate_1 = require("../outputs/MyCartMaxAggregate");
const MyCartMinAggregate_1 = require("../outputs/MyCartMinAggregate");
let MyCartGroupBy = class MyCartGroupBy {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], MyCartGroupBy.prototype, "id", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => Date, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Date)
], MyCartGroupBy.prototype, "createdAt", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => Date, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Date)
], MyCartGroupBy.prototype, "updateAt", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], MyCartGroupBy.prototype, "coursesId", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", String)
], MyCartGroupBy.prototype, "userId", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => MyCartCountAggregate_1.MyCartCountAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", MyCartCountAggregate_1.MyCartCountAggregate)
], MyCartGroupBy.prototype, "_count", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => MyCartMinAggregate_1.MyCartMinAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", MyCartMinAggregate_1.MyCartMinAggregate)
], MyCartGroupBy.prototype, "_min", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => MyCartMaxAggregate_1.MyCartMaxAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", MyCartMaxAggregate_1.MyCartMaxAggregate)
], MyCartGroupBy.prototype, "_max", void 0);
MyCartGroupBy = (0, tslib_1.__decorate)([
    TypeGraphQL.ObjectType("MyCartGroupBy", {
        isAbstract: true
    })
], MyCartGroupBy);
exports.MyCartGroupBy = MyCartGroupBy;
