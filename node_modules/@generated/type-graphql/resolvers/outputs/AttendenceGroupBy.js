"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AttendenceGroupBy = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const AttendenceCountAggregate_1 = require("../outputs/AttendenceCountAggregate");
const AttendenceMaxAggregate_1 = require("../outputs/AttendenceMaxAggregate");
const AttendenceMinAggregate_1 = require("../outputs/AttendenceMinAggregate");
let AttendenceGroupBy = class AttendenceGroupBy {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], AttendenceGroupBy.prototype, "id", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => Boolean, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Boolean)
], AttendenceGroupBy.prototype, "attendence", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => Date, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Date)
], AttendenceGroupBy.prototype, "date", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], AttendenceGroupBy.prototype, "userId", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => AttendenceCountAggregate_1.AttendenceCountAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", AttendenceCountAggregate_1.AttendenceCountAggregate)
], AttendenceGroupBy.prototype, "_count", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => AttendenceMinAggregate_1.AttendenceMinAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", AttendenceMinAggregate_1.AttendenceMinAggregate)
], AttendenceGroupBy.prototype, "_min", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => AttendenceMaxAggregate_1.AttendenceMaxAggregate, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", AttendenceMaxAggregate_1.AttendenceMaxAggregate)
], AttendenceGroupBy.prototype, "_max", void 0);
AttendenceGroupBy = (0, tslib_1.__decorate)([
    TypeGraphQL.ObjectType("AttendenceGroupBy", {
        isAbstract: true
    })
], AttendenceGroupBy);
exports.AttendenceGroupBy = AttendenceGroupBy;
