"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GroupByAttendenceArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const AttendenceOrderByWithAggregationInput_1 = require("../../../inputs/AttendenceOrderByWithAggregationInput");
const AttendenceScalarWhereWithAggregatesInput_1 = require("../../../inputs/AttendenceScalarWhereWithAggregatesInput");
const AttendenceWhereInput_1 = require("../../../inputs/AttendenceWhereInput");
const AttendenceScalarFieldEnum_1 = require("../../../../enums/AttendenceScalarFieldEnum");
let GroupByAttendenceArgs = class GroupByAttendenceArgs {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => AttendenceWhereInput_1.AttendenceWhereInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", AttendenceWhereInput_1.AttendenceWhereInput)
], GroupByAttendenceArgs.prototype, "where", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [AttendenceOrderByWithAggregationInput_1.AttendenceOrderByWithAggregationInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], GroupByAttendenceArgs.prototype, "orderBy", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [AttendenceScalarFieldEnum_1.AttendenceScalarFieldEnum], {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], GroupByAttendenceArgs.prototype, "by", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => AttendenceScalarWhereWithAggregatesInput_1.AttendenceScalarWhereWithAggregatesInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", AttendenceScalarWhereWithAggregatesInput_1.AttendenceScalarWhereWithAggregatesInput)
], GroupByAttendenceArgs.prototype, "having", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], GroupByAttendenceArgs.prototype, "take", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], GroupByAttendenceArgs.prototype, "skip", void 0);
GroupByAttendenceArgs = (0, tslib_1.__decorate)([
    TypeGraphQL.ArgsType()
], GroupByAttendenceArgs);
exports.GroupByAttendenceArgs = GroupByAttendenceArgs;
