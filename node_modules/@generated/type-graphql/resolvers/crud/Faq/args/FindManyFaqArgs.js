"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FindManyFaqArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const FaqOrderByWithRelationInput_1 = require("../../../inputs/FaqOrderByWithRelationInput");
const FaqWhereInput_1 = require("../../../inputs/FaqWhereInput");
const FaqWhereUniqueInput_1 = require("../../../inputs/FaqWhereUniqueInput");
const FaqScalarFieldEnum_1 = require("../../../../enums/FaqScalarFieldEnum");
let FindManyFaqArgs = class FindManyFaqArgs {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => FaqWhereInput_1.FaqWhereInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", FaqWhereInput_1.FaqWhereInput)
], FindManyFaqArgs.prototype, "where", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [FaqOrderByWithRelationInput_1.FaqOrderByWithRelationInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], FindManyFaqArgs.prototype, "orderBy", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => FaqWhereUniqueInput_1.FaqWhereUniqueInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", FaqWhereUniqueInput_1.FaqWhereUniqueInput)
], FindManyFaqArgs.prototype, "cursor", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], FindManyFaqArgs.prototype, "take", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], FindManyFaqArgs.prototype, "skip", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [FaqScalarFieldEnum_1.FaqScalarFieldEnum], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], FindManyFaqArgs.prototype, "distinct", void 0);
FindManyFaqArgs = (0, tslib_1.__decorate)([
    TypeGraphQL.ArgsType()
], FindManyFaqArgs);
exports.FindManyFaqArgs = FindManyFaqArgs;
