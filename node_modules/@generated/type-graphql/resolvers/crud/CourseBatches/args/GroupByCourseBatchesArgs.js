"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GroupByCourseBatchesArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const CourseBatchesOrderByWithAggregationInput_1 = require("../../../inputs/CourseBatchesOrderByWithAggregationInput");
const CourseBatchesScalarWhereWithAggregatesInput_1 = require("../../../inputs/CourseBatchesScalarWhereWithAggregatesInput");
const CourseBatchesWhereInput_1 = require("../../../inputs/CourseBatchesWhereInput");
const CourseBatchesScalarFieldEnum_1 = require("../../../../enums/CourseBatchesScalarFieldEnum");
let GroupByCourseBatchesArgs = class GroupByCourseBatchesArgs {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => CourseBatchesWhereInput_1.CourseBatchesWhereInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", CourseBatchesWhereInput_1.CourseBatchesWhereInput)
], GroupByCourseBatchesArgs.prototype, "where", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [CourseBatchesOrderByWithAggregationInput_1.CourseBatchesOrderByWithAggregationInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], GroupByCourseBatchesArgs.prototype, "orderBy", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [CourseBatchesScalarFieldEnum_1.CourseBatchesScalarFieldEnum], {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], GroupByCourseBatchesArgs.prototype, "by", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => CourseBatchesScalarWhereWithAggregatesInput_1.CourseBatchesScalarWhereWithAggregatesInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", CourseBatchesScalarWhereWithAggregatesInput_1.CourseBatchesScalarWhereWithAggregatesInput)
], GroupByCourseBatchesArgs.prototype, "having", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], GroupByCourseBatchesArgs.prototype, "take", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], GroupByCourseBatchesArgs.prototype, "skip", void 0);
GroupByCourseBatchesArgs = (0, tslib_1.__decorate)([
    TypeGraphQL.ArgsType()
], GroupByCourseBatchesArgs);
exports.GroupByCourseBatchesArgs = GroupByCourseBatchesArgs;
