"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GroupByCoursesArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const CoursesOrderByWithAggregationInput_1 = require("../../../inputs/CoursesOrderByWithAggregationInput");
const CoursesScalarWhereWithAggregatesInput_1 = require("../../../inputs/CoursesScalarWhereWithAggregatesInput");
const CoursesWhereInput_1 = require("../../../inputs/CoursesWhereInput");
const CoursesScalarFieldEnum_1 = require("../../../../enums/CoursesScalarFieldEnum");
let GroupByCoursesArgs = class GroupByCoursesArgs {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => CoursesWhereInput_1.CoursesWhereInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", CoursesWhereInput_1.CoursesWhereInput)
], GroupByCoursesArgs.prototype, "where", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [CoursesOrderByWithAggregationInput_1.CoursesOrderByWithAggregationInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], GroupByCoursesArgs.prototype, "orderBy", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [CoursesScalarFieldEnum_1.CoursesScalarFieldEnum], {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], GroupByCoursesArgs.prototype, "by", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => CoursesScalarWhereWithAggregatesInput_1.CoursesScalarWhereWithAggregatesInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", CoursesScalarWhereWithAggregatesInput_1.CoursesScalarWhereWithAggregatesInput)
], GroupByCoursesArgs.prototype, "having", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], GroupByCoursesArgs.prototype, "take", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], GroupByCoursesArgs.prototype, "skip", void 0);
GroupByCoursesArgs = (0, tslib_1.__decorate)([
    TypeGraphQL.ArgsType()
], GroupByCoursesArgs);
exports.GroupByCoursesArgs = GroupByCoursesArgs;
