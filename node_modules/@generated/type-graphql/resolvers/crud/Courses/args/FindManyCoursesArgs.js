"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FindManyCoursesArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const CoursesOrderByWithRelationInput_1 = require("../../../inputs/CoursesOrderByWithRelationInput");
const CoursesWhereInput_1 = require("../../../inputs/CoursesWhereInput");
const CoursesWhereUniqueInput_1 = require("../../../inputs/CoursesWhereUniqueInput");
const CoursesScalarFieldEnum_1 = require("../../../../enums/CoursesScalarFieldEnum");
let FindManyCoursesArgs = class FindManyCoursesArgs {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => CoursesWhereInput_1.CoursesWhereInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", CoursesWhereInput_1.CoursesWhereInput)
], FindManyCoursesArgs.prototype, "where", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [CoursesOrderByWithRelationInput_1.CoursesOrderByWithRelationInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], FindManyCoursesArgs.prototype, "orderBy", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => CoursesWhereUniqueInput_1.CoursesWhereUniqueInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", CoursesWhereUniqueInput_1.CoursesWhereUniqueInput)
], FindManyCoursesArgs.prototype, "cursor", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], FindManyCoursesArgs.prototype, "take", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], FindManyCoursesArgs.prototype, "skip", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [CoursesScalarFieldEnum_1.CoursesScalarFieldEnum], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], FindManyCoursesArgs.prototype, "distinct", void 0);
FindManyCoursesArgs = (0, tslib_1.__decorate)([
    TypeGraphQL.ArgsType()
], FindManyCoursesArgs);
exports.FindManyCoursesArgs = FindManyCoursesArgs;
