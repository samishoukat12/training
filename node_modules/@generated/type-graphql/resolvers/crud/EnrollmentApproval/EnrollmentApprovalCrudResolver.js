"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EnrollmentApprovalCrudResolver = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const graphql_fields_1 = (0, tslib_1.__importDefault)(require("graphql-fields"));
const AggregateEnrollmentApprovalArgs_1 = require("./args/AggregateEnrollmentApprovalArgs");
const CreateEnrollmentApprovalArgs_1 = require("./args/CreateEnrollmentApprovalArgs");
const CreateManyEnrollmentApprovalArgs_1 = require("./args/CreateManyEnrollmentApprovalArgs");
const DeleteEnrollmentApprovalArgs_1 = require("./args/DeleteEnrollmentApprovalArgs");
const DeleteManyEnrollmentApprovalArgs_1 = require("./args/DeleteManyEnrollmentApprovalArgs");
const FindFirstEnrollmentApprovalArgs_1 = require("./args/FindFirstEnrollmentApprovalArgs");
const FindManyEnrollmentApprovalArgs_1 = require("./args/FindManyEnrollmentApprovalArgs");
const FindUniqueEnrollmentApprovalArgs_1 = require("./args/FindUniqueEnrollmentApprovalArgs");
const GroupByEnrollmentApprovalArgs_1 = require("./args/GroupByEnrollmentApprovalArgs");
const UpdateEnrollmentApprovalArgs_1 = require("./args/UpdateEnrollmentApprovalArgs");
const UpdateManyEnrollmentApprovalArgs_1 = require("./args/UpdateManyEnrollmentApprovalArgs");
const UpsertEnrollmentApprovalArgs_1 = require("./args/UpsertEnrollmentApprovalArgs");
const helpers_1 = require("../../../helpers");
const EnrollmentApproval_1 = require("../../../models/EnrollmentApproval");
const AffectedRowsOutput_1 = require("../../outputs/AffectedRowsOutput");
const AggregateEnrollmentApproval_1 = require("../../outputs/AggregateEnrollmentApproval");
const EnrollmentApprovalGroupBy_1 = require("../../outputs/EnrollmentApprovalGroupBy");
let EnrollmentApprovalCrudResolver = class EnrollmentApprovalCrudResolver {
    async enrollmentApproval(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).enrollmentApproval.findUnique({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async findFirstEnrollmentApproval(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).enrollmentApproval.findFirst({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async enrollmentApprovals(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).enrollmentApproval.findMany({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async createEnrollmentApproval(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).enrollmentApproval.create({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async createManyEnrollmentApproval(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).enrollmentApproval.createMany({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async deleteEnrollmentApproval(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).enrollmentApproval.delete({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async updateEnrollmentApproval(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).enrollmentApproval.update({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async deleteManyEnrollmentApproval(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).enrollmentApproval.deleteMany({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async updateManyEnrollmentApproval(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).enrollmentApproval.updateMany({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async upsertEnrollmentApproval(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).enrollmentApproval.upsert({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async aggregateEnrollmentApproval(ctx, info, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).enrollmentApproval.aggregate({
            ...args,
            ...(0, helpers_1.transformFields)((0, graphql_fields_1.default)(info)),
        });
    }
    async groupByEnrollmentApproval(ctx, info, args) {
        const { _count, _avg, _sum, _min, _max } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).enrollmentApproval.groupBy({
            ...args,
            ...Object.fromEntries(Object.entries({ _count, _avg, _sum, _min, _max }).filter(([_, v]) => v != null)),
        });
    }
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Query(_returns => EnrollmentApproval_1.EnrollmentApproval, {
        nullable: true
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, FindUniqueEnrollmentApprovalArgs_1.FindUniqueEnrollmentApprovalArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], EnrollmentApprovalCrudResolver.prototype, "enrollmentApproval", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Query(_returns => EnrollmentApproval_1.EnrollmentApproval, {
        nullable: true
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, FindFirstEnrollmentApprovalArgs_1.FindFirstEnrollmentApprovalArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], EnrollmentApprovalCrudResolver.prototype, "findFirstEnrollmentApproval", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Query(_returns => [EnrollmentApproval_1.EnrollmentApproval], {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, FindManyEnrollmentApprovalArgs_1.FindManyEnrollmentApprovalArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], EnrollmentApprovalCrudResolver.prototype, "enrollmentApprovals", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Mutation(_returns => EnrollmentApproval_1.EnrollmentApproval, {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, CreateEnrollmentApprovalArgs_1.CreateEnrollmentApprovalArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], EnrollmentApprovalCrudResolver.prototype, "createEnrollmentApproval", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Mutation(_returns => AffectedRowsOutput_1.AffectedRowsOutput, {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, CreateManyEnrollmentApprovalArgs_1.CreateManyEnrollmentApprovalArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], EnrollmentApprovalCrudResolver.prototype, "createManyEnrollmentApproval", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Mutation(_returns => EnrollmentApproval_1.EnrollmentApproval, {
        nullable: true
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, DeleteEnrollmentApprovalArgs_1.DeleteEnrollmentApprovalArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], EnrollmentApprovalCrudResolver.prototype, "deleteEnrollmentApproval", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Mutation(_returns => EnrollmentApproval_1.EnrollmentApproval, {
        nullable: true
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, UpdateEnrollmentApprovalArgs_1.UpdateEnrollmentApprovalArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], EnrollmentApprovalCrudResolver.prototype, "updateEnrollmentApproval", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Mutation(_returns => AffectedRowsOutput_1.AffectedRowsOutput, {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, DeleteManyEnrollmentApprovalArgs_1.DeleteManyEnrollmentApprovalArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], EnrollmentApprovalCrudResolver.prototype, "deleteManyEnrollmentApproval", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Mutation(_returns => AffectedRowsOutput_1.AffectedRowsOutput, {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, UpdateManyEnrollmentApprovalArgs_1.UpdateManyEnrollmentApprovalArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], EnrollmentApprovalCrudResolver.prototype, "updateManyEnrollmentApproval", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Mutation(_returns => EnrollmentApproval_1.EnrollmentApproval, {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, UpsertEnrollmentApprovalArgs_1.UpsertEnrollmentApprovalArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], EnrollmentApprovalCrudResolver.prototype, "upsertEnrollmentApproval", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Query(_returns => AggregateEnrollmentApproval_1.AggregateEnrollmentApproval, {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, AggregateEnrollmentApprovalArgs_1.AggregateEnrollmentApprovalArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], EnrollmentApprovalCrudResolver.prototype, "aggregateEnrollmentApproval", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Query(_returns => [EnrollmentApprovalGroupBy_1.EnrollmentApprovalGroupBy], {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, GroupByEnrollmentApprovalArgs_1.GroupByEnrollmentApprovalArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], EnrollmentApprovalCrudResolver.prototype, "groupByEnrollmentApproval", null);
EnrollmentApprovalCrudResolver = (0, tslib_1.__decorate)([
    TypeGraphQL.Resolver(_of => EnrollmentApproval_1.EnrollmentApproval)
], EnrollmentApprovalCrudResolver);
exports.EnrollmentApprovalCrudResolver = EnrollmentApprovalCrudResolver;
