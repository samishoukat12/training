import { GraphQLResolveInfo } from "graphql";
import { AggregateEnrollmentApprovalArgs } from "./args/AggregateEnrollmentApprovalArgs";
import { CreateEnrollmentApprovalArgs } from "./args/CreateEnrollmentApprovalArgs";
import { CreateManyEnrollmentApprovalArgs } from "./args/CreateManyEnrollmentApprovalArgs";
import { DeleteEnrollmentApprovalArgs } from "./args/DeleteEnrollmentApprovalArgs";
import { DeleteManyEnrollmentApprovalArgs } from "./args/DeleteManyEnrollmentApprovalArgs";
import { FindFirstEnrollmentApprovalArgs } from "./args/FindFirstEnrollmentApprovalArgs";
import { FindManyEnrollmentApprovalArgs } from "./args/FindManyEnrollmentApprovalArgs";
import { FindUniqueEnrollmentApprovalArgs } from "./args/FindUniqueEnrollmentApprovalArgs";
import { GroupByEnrollmentApprovalArgs } from "./args/GroupByEnrollmentApprovalArgs";
import { UpdateEnrollmentApprovalArgs } from "./args/UpdateEnrollmentApprovalArgs";
import { UpdateManyEnrollmentApprovalArgs } from "./args/UpdateManyEnrollmentApprovalArgs";
import { UpsertEnrollmentApprovalArgs } from "./args/UpsertEnrollmentApprovalArgs";
import { EnrollmentApproval } from "../../../models/EnrollmentApproval";
import { AffectedRowsOutput } from "../../outputs/AffectedRowsOutput";
import { AggregateEnrollmentApproval } from "../../outputs/AggregateEnrollmentApproval";
import { EnrollmentApprovalGroupBy } from "../../outputs/EnrollmentApprovalGroupBy";
export declare class EnrollmentApprovalCrudResolver {
    enrollmentApproval(ctx: any, info: GraphQLResolveInfo, args: FindUniqueEnrollmentApprovalArgs): Promise<EnrollmentApproval | null>;
    findFirstEnrollmentApproval(ctx: any, info: GraphQLResolveInfo, args: FindFirstEnrollmentApprovalArgs): Promise<EnrollmentApproval | null>;
    enrollmentApprovals(ctx: any, info: GraphQLResolveInfo, args: FindManyEnrollmentApprovalArgs): Promise<EnrollmentApproval[]>;
    createEnrollmentApproval(ctx: any, info: GraphQLResolveInfo, args: CreateEnrollmentApprovalArgs): Promise<EnrollmentApproval>;
    createManyEnrollmentApproval(ctx: any, info: GraphQLResolveInfo, args: CreateManyEnrollmentApprovalArgs): Promise<AffectedRowsOutput>;
    deleteEnrollmentApproval(ctx: any, info: GraphQLResolveInfo, args: DeleteEnrollmentApprovalArgs): Promise<EnrollmentApproval | null>;
    updateEnrollmentApproval(ctx: any, info: GraphQLResolveInfo, args: UpdateEnrollmentApprovalArgs): Promise<EnrollmentApproval | null>;
    deleteManyEnrollmentApproval(ctx: any, info: GraphQLResolveInfo, args: DeleteManyEnrollmentApprovalArgs): Promise<AffectedRowsOutput>;
    updateManyEnrollmentApproval(ctx: any, info: GraphQLResolveInfo, args: UpdateManyEnrollmentApprovalArgs): Promise<AffectedRowsOutput>;
    upsertEnrollmentApproval(ctx: any, info: GraphQLResolveInfo, args: UpsertEnrollmentApprovalArgs): Promise<EnrollmentApproval>;
    aggregateEnrollmentApproval(ctx: any, info: GraphQLResolveInfo, args: AggregateEnrollmentApprovalArgs): Promise<AggregateEnrollmentApproval>;
    groupByEnrollmentApproval(ctx: any, info: GraphQLResolveInfo, args: GroupByEnrollmentApprovalArgs): Promise<EnrollmentApprovalGroupBy[]>;
}
