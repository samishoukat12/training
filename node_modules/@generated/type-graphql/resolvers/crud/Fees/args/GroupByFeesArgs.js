"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GroupByFeesArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const FeesOrderByWithAggregationInput_1 = require("../../../inputs/FeesOrderByWithAggregationInput");
const FeesScalarWhereWithAggregatesInput_1 = require("../../../inputs/FeesScalarWhereWithAggregatesInput");
const FeesWhereInput_1 = require("../../../inputs/FeesWhereInput");
const FeesScalarFieldEnum_1 = require("../../../../enums/FeesScalarFieldEnum");
let GroupByFeesArgs = class GroupByFeesArgs {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => FeesWhereInput_1.FeesWhereInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", FeesWhereInput_1.FeesWhereInput)
], GroupByFeesArgs.prototype, "where", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [FeesOrderByWithAggregationInput_1.FeesOrderByWithAggregationInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], GroupByFeesArgs.prototype, "orderBy", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [FeesScalarFieldEnum_1.FeesScalarFieldEnum], {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], GroupByFeesArgs.prototype, "by", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => FeesScalarWhereWithAggregatesInput_1.FeesScalarWhereWithAggregatesInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", FeesScalarWhereWithAggregatesInput_1.FeesScalarWhereWithAggregatesInput)
], GroupByFeesArgs.prototype, "having", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], GroupByFeesArgs.prototype, "take", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], GroupByFeesArgs.prototype, "skip", void 0);
GroupByFeesArgs = (0, tslib_1.__decorate)([
    TypeGraphQL.ArgsType()
], GroupByFeesArgs);
exports.GroupByFeesArgs = GroupByFeesArgs;
