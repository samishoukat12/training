"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FindManyFeesArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const FeesOrderByWithRelationInput_1 = require("../../../inputs/FeesOrderByWithRelationInput");
const FeesWhereInput_1 = require("../../../inputs/FeesWhereInput");
const FeesWhereUniqueInput_1 = require("../../../inputs/FeesWhereUniqueInput");
const FeesScalarFieldEnum_1 = require("../../../../enums/FeesScalarFieldEnum");
let FindManyFeesArgs = class FindManyFeesArgs {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => FeesWhereInput_1.FeesWhereInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", FeesWhereInput_1.FeesWhereInput)
], FindManyFeesArgs.prototype, "where", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [FeesOrderByWithRelationInput_1.FeesOrderByWithRelationInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], FindManyFeesArgs.prototype, "orderBy", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => FeesWhereUniqueInput_1.FeesWhereUniqueInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", FeesWhereUniqueInput_1.FeesWhereUniqueInput)
], FindManyFeesArgs.prototype, "cursor", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], FindManyFeesArgs.prototype, "take", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], FindManyFeesArgs.prototype, "skip", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [FeesScalarFieldEnum_1.FeesScalarFieldEnum], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], FindManyFeesArgs.prototype, "distinct", void 0);
FindManyFeesArgs = (0, tslib_1.__decorate)([
    TypeGraphQL.ArgsType()
], FindManyFeesArgs);
exports.FindManyFeesArgs = FindManyFeesArgs;
