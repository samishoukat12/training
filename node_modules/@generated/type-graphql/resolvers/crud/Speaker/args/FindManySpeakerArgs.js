"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FindManySpeakerArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const SpeakerOrderByWithRelationInput_1 = require("../../../inputs/SpeakerOrderByWithRelationInput");
const SpeakerWhereInput_1 = require("../../../inputs/SpeakerWhereInput");
const SpeakerWhereUniqueInput_1 = require("../../../inputs/SpeakerWhereUniqueInput");
const SpeakerScalarFieldEnum_1 = require("../../../../enums/SpeakerScalarFieldEnum");
let FindManySpeakerArgs = class FindManySpeakerArgs {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => SpeakerWhereInput_1.SpeakerWhereInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", SpeakerWhereInput_1.SpeakerWhereInput)
], FindManySpeakerArgs.prototype, "where", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [SpeakerOrderByWithRelationInput_1.SpeakerOrderByWithRelationInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], FindManySpeakerArgs.prototype, "orderBy", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => SpeakerWhereUniqueInput_1.SpeakerWhereUniqueInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", SpeakerWhereUniqueInput_1.SpeakerWhereUniqueInput)
], FindManySpeakerArgs.prototype, "cursor", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], FindManySpeakerArgs.prototype, "take", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], FindManySpeakerArgs.prototype, "skip", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [SpeakerScalarFieldEnum_1.SpeakerScalarFieldEnum], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], FindManySpeakerArgs.prototype, "distinct", void 0);
FindManySpeakerArgs = (0, tslib_1.__decorate)([
    TypeGraphQL.ArgsType()
], FindManySpeakerArgs);
exports.FindManySpeakerArgs = FindManySpeakerArgs;
