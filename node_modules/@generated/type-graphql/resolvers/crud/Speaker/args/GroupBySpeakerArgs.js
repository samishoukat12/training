"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GroupBySpeakerArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const SpeakerOrderByWithAggregationInput_1 = require("../../../inputs/SpeakerOrderByWithAggregationInput");
const SpeakerScalarWhereWithAggregatesInput_1 = require("../../../inputs/SpeakerScalarWhereWithAggregatesInput");
const SpeakerWhereInput_1 = require("../../../inputs/SpeakerWhereInput");
const SpeakerScalarFieldEnum_1 = require("../../../../enums/SpeakerScalarFieldEnum");
let GroupBySpeakerArgs = class GroupBySpeakerArgs {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => SpeakerWhereInput_1.SpeakerWhereInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", SpeakerWhereInput_1.SpeakerWhereInput)
], GroupBySpeakerArgs.prototype, "where", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [SpeakerOrderByWithAggregationInput_1.SpeakerOrderByWithAggregationInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], GroupBySpeakerArgs.prototype, "orderBy", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [SpeakerScalarFieldEnum_1.SpeakerScalarFieldEnum], {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], GroupBySpeakerArgs.prototype, "by", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => SpeakerScalarWhereWithAggregatesInput_1.SpeakerScalarWhereWithAggregatesInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", SpeakerScalarWhereWithAggregatesInput_1.SpeakerScalarWhereWithAggregatesInput)
], GroupBySpeakerArgs.prototype, "having", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], GroupBySpeakerArgs.prototype, "take", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], GroupBySpeakerArgs.prototype, "skip", void 0);
GroupBySpeakerArgs = (0, tslib_1.__decorate)([
    TypeGraphQL.ArgsType()
], GroupBySpeakerArgs);
exports.GroupBySpeakerArgs = GroupBySpeakerArgs;
