"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FindManyLecturesArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const LecturesOrderByWithRelationInput_1 = require("../../../inputs/LecturesOrderByWithRelationInput");
const LecturesWhereInput_1 = require("../../../inputs/LecturesWhereInput");
const LecturesWhereUniqueInput_1 = require("../../../inputs/LecturesWhereUniqueInput");
const LecturesScalarFieldEnum_1 = require("../../../../enums/LecturesScalarFieldEnum");
let FindManyLecturesArgs = class FindManyLecturesArgs {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => LecturesWhereInput_1.LecturesWhereInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", LecturesWhereInput_1.LecturesWhereInput)
], FindManyLecturesArgs.prototype, "where", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [LecturesOrderByWithRelationInput_1.LecturesOrderByWithRelationInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], FindManyLecturesArgs.prototype, "orderBy", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => LecturesWhereUniqueInput_1.LecturesWhereUniqueInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", LecturesWhereUniqueInput_1.LecturesWhereUniqueInput)
], FindManyLecturesArgs.prototype, "cursor", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], FindManyLecturesArgs.prototype, "take", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], FindManyLecturesArgs.prototype, "skip", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [LecturesScalarFieldEnum_1.LecturesScalarFieldEnum], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], FindManyLecturesArgs.prototype, "distinct", void 0);
FindManyLecturesArgs = (0, tslib_1.__decorate)([
    TypeGraphQL.ArgsType()
], FindManyLecturesArgs);
exports.FindManyLecturesArgs = FindManyLecturesArgs;
