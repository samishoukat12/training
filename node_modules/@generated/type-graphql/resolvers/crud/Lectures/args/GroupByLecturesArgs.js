"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GroupByLecturesArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const LecturesOrderByWithAggregationInput_1 = require("../../../inputs/LecturesOrderByWithAggregationInput");
const LecturesScalarWhereWithAggregatesInput_1 = require("../../../inputs/LecturesScalarWhereWithAggregatesInput");
const LecturesWhereInput_1 = require("../../../inputs/LecturesWhereInput");
const LecturesScalarFieldEnum_1 = require("../../../../enums/LecturesScalarFieldEnum");
let GroupByLecturesArgs = class GroupByLecturesArgs {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => LecturesWhereInput_1.LecturesWhereInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", LecturesWhereInput_1.LecturesWhereInput)
], GroupByLecturesArgs.prototype, "where", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [LecturesOrderByWithAggregationInput_1.LecturesOrderByWithAggregationInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], GroupByLecturesArgs.prototype, "orderBy", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [LecturesScalarFieldEnum_1.LecturesScalarFieldEnum], {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], GroupByLecturesArgs.prototype, "by", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => LecturesScalarWhereWithAggregatesInput_1.LecturesScalarWhereWithAggregatesInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", LecturesScalarWhereWithAggregatesInput_1.LecturesScalarWhereWithAggregatesInput)
], GroupByLecturesArgs.prototype, "having", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], GroupByLecturesArgs.prototype, "take", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], GroupByLecturesArgs.prototype, "skip", void 0);
GroupByLecturesArgs = (0, tslib_1.__decorate)([
    TypeGraphQL.ArgsType()
], GroupByLecturesArgs);
exports.GroupByLecturesArgs = GroupByLecturesArgs;
