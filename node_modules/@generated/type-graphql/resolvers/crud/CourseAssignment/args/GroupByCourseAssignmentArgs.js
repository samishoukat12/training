"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GroupByCourseAssignmentArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const CourseAssignmentOrderByWithAggregationInput_1 = require("../../../inputs/CourseAssignmentOrderByWithAggregationInput");
const CourseAssignmentScalarWhereWithAggregatesInput_1 = require("../../../inputs/CourseAssignmentScalarWhereWithAggregatesInput");
const CourseAssignmentWhereInput_1 = require("../../../inputs/CourseAssignmentWhereInput");
const CourseAssignmentScalarFieldEnum_1 = require("../../../../enums/CourseAssignmentScalarFieldEnum");
let GroupByCourseAssignmentArgs = class GroupByCourseAssignmentArgs {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => CourseAssignmentWhereInput_1.CourseAssignmentWhereInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", CourseAssignmentWhereInput_1.CourseAssignmentWhereInput)
], GroupByCourseAssignmentArgs.prototype, "where", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [CourseAssignmentOrderByWithAggregationInput_1.CourseAssignmentOrderByWithAggregationInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], GroupByCourseAssignmentArgs.prototype, "orderBy", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [CourseAssignmentScalarFieldEnum_1.CourseAssignmentScalarFieldEnum], {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], GroupByCourseAssignmentArgs.prototype, "by", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => CourseAssignmentScalarWhereWithAggregatesInput_1.CourseAssignmentScalarWhereWithAggregatesInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", CourseAssignmentScalarWhereWithAggregatesInput_1.CourseAssignmentScalarWhereWithAggregatesInput)
], GroupByCourseAssignmentArgs.prototype, "having", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], GroupByCourseAssignmentArgs.prototype, "take", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], GroupByCourseAssignmentArgs.prototype, "skip", void 0);
GroupByCourseAssignmentArgs = (0, tslib_1.__decorate)([
    TypeGraphQL.ArgsType()
], GroupByCourseAssignmentArgs);
exports.GroupByCourseAssignmentArgs = GroupByCourseAssignmentArgs;
