"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GroupByStudentsArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const StudentsOrderByWithAggregationInput_1 = require("../../../inputs/StudentsOrderByWithAggregationInput");
const StudentsScalarWhereWithAggregatesInput_1 = require("../../../inputs/StudentsScalarWhereWithAggregatesInput");
const StudentsWhereInput_1 = require("../../../inputs/StudentsWhereInput");
const StudentsScalarFieldEnum_1 = require("../../../../enums/StudentsScalarFieldEnum");
let GroupByStudentsArgs = class GroupByStudentsArgs {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => StudentsWhereInput_1.StudentsWhereInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", StudentsWhereInput_1.StudentsWhereInput)
], GroupByStudentsArgs.prototype, "where", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [StudentsOrderByWithAggregationInput_1.StudentsOrderByWithAggregationInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], GroupByStudentsArgs.prototype, "orderBy", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [StudentsScalarFieldEnum_1.StudentsScalarFieldEnum], {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], GroupByStudentsArgs.prototype, "by", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => StudentsScalarWhereWithAggregatesInput_1.StudentsScalarWhereWithAggregatesInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", StudentsScalarWhereWithAggregatesInput_1.StudentsScalarWhereWithAggregatesInput)
], GroupByStudentsArgs.prototype, "having", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], GroupByStudentsArgs.prototype, "take", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], GroupByStudentsArgs.prototype, "skip", void 0);
GroupByStudentsArgs = (0, tslib_1.__decorate)([
    TypeGraphQL.ArgsType()
], GroupByStudentsArgs);
exports.GroupByStudentsArgs = GroupByStudentsArgs;
