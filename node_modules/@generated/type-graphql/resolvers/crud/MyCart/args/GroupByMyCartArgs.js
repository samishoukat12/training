"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GroupByMyCartArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const MyCartOrderByWithAggregationInput_1 = require("../../../inputs/MyCartOrderByWithAggregationInput");
const MyCartScalarWhereWithAggregatesInput_1 = require("../../../inputs/MyCartScalarWhereWithAggregatesInput");
const MyCartWhereInput_1 = require("../../../inputs/MyCartWhereInput");
const MyCartScalarFieldEnum_1 = require("../../../../enums/MyCartScalarFieldEnum");
let GroupByMyCartArgs = class GroupByMyCartArgs {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => MyCartWhereInput_1.MyCartWhereInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", MyCartWhereInput_1.MyCartWhereInput)
], GroupByMyCartArgs.prototype, "where", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [MyCartOrderByWithAggregationInput_1.MyCartOrderByWithAggregationInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], GroupByMyCartArgs.prototype, "orderBy", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [MyCartScalarFieldEnum_1.MyCartScalarFieldEnum], {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], GroupByMyCartArgs.prototype, "by", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => MyCartScalarWhereWithAggregatesInput_1.MyCartScalarWhereWithAggregatesInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", MyCartScalarWhereWithAggregatesInput_1.MyCartScalarWhereWithAggregatesInput)
], GroupByMyCartArgs.prototype, "having", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], GroupByMyCartArgs.prototype, "take", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], GroupByMyCartArgs.prototype, "skip", void 0);
GroupByMyCartArgs = (0, tslib_1.__decorate)([
    TypeGraphQL.ArgsType()
], GroupByMyCartArgs);
exports.GroupByMyCartArgs = GroupByMyCartArgs;
