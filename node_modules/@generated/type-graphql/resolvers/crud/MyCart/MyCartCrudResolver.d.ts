import { GraphQLResolveInfo } from "graphql";
import { AggregateMyCartArgs } from "./args/AggregateMyCartArgs";
import { CreateManyMyCartArgs } from "./args/CreateManyMyCartArgs";
import { CreateMyCartArgs } from "./args/CreateMyCartArgs";
import { DeleteManyMyCartArgs } from "./args/DeleteManyMyCartArgs";
import { DeleteMyCartArgs } from "./args/DeleteMyCartArgs";
import { FindFirstMyCartArgs } from "./args/FindFirstMyCartArgs";
import { FindManyMyCartArgs } from "./args/FindManyMyCartArgs";
import { FindUniqueMyCartArgs } from "./args/FindUniqueMyCartArgs";
import { GroupByMyCartArgs } from "./args/GroupByMyCartArgs";
import { UpdateManyMyCartArgs } from "./args/UpdateManyMyCartArgs";
import { UpdateMyCartArgs } from "./args/UpdateMyCartArgs";
import { UpsertMyCartArgs } from "./args/UpsertMyCartArgs";
import { MyCart } from "../../../models/MyCart";
import { AffectedRowsOutput } from "../../outputs/AffectedRowsOutput";
import { AggregateMyCart } from "../../outputs/AggregateMyCart";
import { MyCartGroupBy } from "../../outputs/MyCartGroupBy";
export declare class MyCartCrudResolver {
    myCart(ctx: any, info: GraphQLResolveInfo, args: FindUniqueMyCartArgs): Promise<MyCart | null>;
    findFirstMyCart(ctx: any, info: GraphQLResolveInfo, args: FindFirstMyCartArgs): Promise<MyCart | null>;
    myCarts(ctx: any, info: GraphQLResolveInfo, args: FindManyMyCartArgs): Promise<MyCart[]>;
    createMyCart(ctx: any, info: GraphQLResolveInfo, args: CreateMyCartArgs): Promise<MyCart>;
    createManyMyCart(ctx: any, info: GraphQLResolveInfo, args: CreateManyMyCartArgs): Promise<AffectedRowsOutput>;
    deleteMyCart(ctx: any, info: GraphQLResolveInfo, args: DeleteMyCartArgs): Promise<MyCart | null>;
    updateMyCart(ctx: any, info: GraphQLResolveInfo, args: UpdateMyCartArgs): Promise<MyCart | null>;
    deleteManyMyCart(ctx: any, info: GraphQLResolveInfo, args: DeleteManyMyCartArgs): Promise<AffectedRowsOutput>;
    updateManyMyCart(ctx: any, info: GraphQLResolveInfo, args: UpdateManyMyCartArgs): Promise<AffectedRowsOutput>;
    upsertMyCart(ctx: any, info: GraphQLResolveInfo, args: UpsertMyCartArgs): Promise<MyCart>;
    aggregateMyCart(ctx: any, info: GraphQLResolveInfo, args: AggregateMyCartArgs): Promise<AggregateMyCart>;
    groupByMyCart(ctx: any, info: GraphQLResolveInfo, args: GroupByMyCartArgs): Promise<MyCartGroupBy[]>;
}
