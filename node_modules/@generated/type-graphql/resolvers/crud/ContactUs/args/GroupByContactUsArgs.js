"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GroupByContactUsArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const ContactUsOrderByWithAggregationInput_1 = require("../../../inputs/ContactUsOrderByWithAggregationInput");
const ContactUsScalarWhereWithAggregatesInput_1 = require("../../../inputs/ContactUsScalarWhereWithAggregatesInput");
const ContactUsWhereInput_1 = require("../../../inputs/ContactUsWhereInput");
const ContactUsScalarFieldEnum_1 = require("../../../../enums/ContactUsScalarFieldEnum");
let GroupByContactUsArgs = class GroupByContactUsArgs {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => ContactUsWhereInput_1.ContactUsWhereInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", ContactUsWhereInput_1.ContactUsWhereInput)
], GroupByContactUsArgs.prototype, "where", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [ContactUsOrderByWithAggregationInput_1.ContactUsOrderByWithAggregationInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], GroupByContactUsArgs.prototype, "orderBy", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [ContactUsScalarFieldEnum_1.ContactUsScalarFieldEnum], {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], GroupByContactUsArgs.prototype, "by", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => ContactUsScalarWhereWithAggregatesInput_1.ContactUsScalarWhereWithAggregatesInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", ContactUsScalarWhereWithAggregatesInput_1.ContactUsScalarWhereWithAggregatesInput)
], GroupByContactUsArgs.prototype, "having", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], GroupByContactUsArgs.prototype, "take", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], GroupByContactUsArgs.prototype, "skip", void 0);
GroupByContactUsArgs = (0, tslib_1.__decorate)([
    TypeGraphQL.ArgsType()
], GroupByContactUsArgs);
exports.GroupByContactUsArgs = GroupByContactUsArgs;
