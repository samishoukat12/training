"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GroupByMyCourseArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const MyCourseOrderByWithAggregationInput_1 = require("../../../inputs/MyCourseOrderByWithAggregationInput");
const MyCourseScalarWhereWithAggregatesInput_1 = require("../../../inputs/MyCourseScalarWhereWithAggregatesInput");
const MyCourseWhereInput_1 = require("../../../inputs/MyCourseWhereInput");
const MyCourseScalarFieldEnum_1 = require("../../../../enums/MyCourseScalarFieldEnum");
let GroupByMyCourseArgs = class GroupByMyCourseArgs {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => MyCourseWhereInput_1.MyCourseWhereInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", MyCourseWhereInput_1.MyCourseWhereInput)
], GroupByMyCourseArgs.prototype, "where", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [MyCourseOrderByWithAggregationInput_1.MyCourseOrderByWithAggregationInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], GroupByMyCourseArgs.prototype, "orderBy", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [MyCourseScalarFieldEnum_1.MyCourseScalarFieldEnum], {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], GroupByMyCourseArgs.prototype, "by", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => MyCourseScalarWhereWithAggregatesInput_1.MyCourseScalarWhereWithAggregatesInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", MyCourseScalarWhereWithAggregatesInput_1.MyCourseScalarWhereWithAggregatesInput)
], GroupByMyCourseArgs.prototype, "having", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], GroupByMyCourseArgs.prototype, "take", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Number)
], GroupByMyCourseArgs.prototype, "skip", void 0);
GroupByMyCourseArgs = (0, tslib_1.__decorate)([
    TypeGraphQL.ArgsType()
], GroupByMyCourseArgs);
exports.GroupByMyCourseArgs = GroupByMyCourseArgs;
