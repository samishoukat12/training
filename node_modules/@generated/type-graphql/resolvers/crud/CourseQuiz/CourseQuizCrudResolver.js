"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CourseQuizCrudResolver = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const graphql_fields_1 = (0, tslib_1.__importDefault)(require("graphql-fields"));
const AggregateCourseQuizArgs_1 = require("./args/AggregateCourseQuizArgs");
const CreateCourseQuizArgs_1 = require("./args/CreateCourseQuizArgs");
const CreateManyCourseQuizArgs_1 = require("./args/CreateManyCourseQuizArgs");
const DeleteCourseQuizArgs_1 = require("./args/DeleteCourseQuizArgs");
const DeleteManyCourseQuizArgs_1 = require("./args/DeleteManyCourseQuizArgs");
const FindFirstCourseQuizArgs_1 = require("./args/FindFirstCourseQuizArgs");
const FindManyCourseQuizArgs_1 = require("./args/FindManyCourseQuizArgs");
const FindUniqueCourseQuizArgs_1 = require("./args/FindUniqueCourseQuizArgs");
const GroupByCourseQuizArgs_1 = require("./args/GroupByCourseQuizArgs");
const UpdateCourseQuizArgs_1 = require("./args/UpdateCourseQuizArgs");
const UpdateManyCourseQuizArgs_1 = require("./args/UpdateManyCourseQuizArgs");
const UpsertCourseQuizArgs_1 = require("./args/UpsertCourseQuizArgs");
const helpers_1 = require("../../../helpers");
const CourseQuiz_1 = require("../../../models/CourseQuiz");
const AffectedRowsOutput_1 = require("../../outputs/AffectedRowsOutput");
const AggregateCourseQuiz_1 = require("../../outputs/AggregateCourseQuiz");
const CourseQuizGroupBy_1 = require("../../outputs/CourseQuizGroupBy");
let CourseQuizCrudResolver = class CourseQuizCrudResolver {
    async courseQuiz(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).courseQuiz.findUnique({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async findFirstCourseQuiz(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).courseQuiz.findFirst({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async courseQuizs(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).courseQuiz.findMany({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async createCourseQuiz(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).courseQuiz.create({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async createManyCourseQuiz(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).courseQuiz.createMany({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async deleteCourseQuiz(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).courseQuiz.delete({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async updateCourseQuiz(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).courseQuiz.update({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async deleteManyCourseQuiz(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).courseQuiz.deleteMany({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async updateManyCourseQuiz(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).courseQuiz.updateMany({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async upsertCourseQuiz(ctx, info, args) {
        const { _count } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).courseQuiz.upsert({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async aggregateCourseQuiz(ctx, info, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).courseQuiz.aggregate({
            ...args,
            ...(0, helpers_1.transformFields)((0, graphql_fields_1.default)(info)),
        });
    }
    async groupByCourseQuiz(ctx, info, args) {
        const { _count, _avg, _sum, _min, _max } = (0, helpers_1.transformFields)((0, graphql_fields_1.default)(info));
        return (0, helpers_1.getPrismaFromContext)(ctx).courseQuiz.groupBy({
            ...args,
            ...Object.fromEntries(Object.entries({ _count, _avg, _sum, _min, _max }).filter(([_, v]) => v != null)),
        });
    }
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Query(_returns => CourseQuiz_1.CourseQuiz, {
        nullable: true
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, FindUniqueCourseQuizArgs_1.FindUniqueCourseQuizArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], CourseQuizCrudResolver.prototype, "courseQuiz", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Query(_returns => CourseQuiz_1.CourseQuiz, {
        nullable: true
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, FindFirstCourseQuizArgs_1.FindFirstCourseQuizArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], CourseQuizCrudResolver.prototype, "findFirstCourseQuiz", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Query(_returns => [CourseQuiz_1.CourseQuiz], {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, FindManyCourseQuizArgs_1.FindManyCourseQuizArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], CourseQuizCrudResolver.prototype, "courseQuizs", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Mutation(_returns => CourseQuiz_1.CourseQuiz, {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, CreateCourseQuizArgs_1.CreateCourseQuizArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], CourseQuizCrudResolver.prototype, "createCourseQuiz", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Mutation(_returns => AffectedRowsOutput_1.AffectedRowsOutput, {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, CreateManyCourseQuizArgs_1.CreateManyCourseQuizArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], CourseQuizCrudResolver.prototype, "createManyCourseQuiz", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Mutation(_returns => CourseQuiz_1.CourseQuiz, {
        nullable: true
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, DeleteCourseQuizArgs_1.DeleteCourseQuizArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], CourseQuizCrudResolver.prototype, "deleteCourseQuiz", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Mutation(_returns => CourseQuiz_1.CourseQuiz, {
        nullable: true
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, UpdateCourseQuizArgs_1.UpdateCourseQuizArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], CourseQuizCrudResolver.prototype, "updateCourseQuiz", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Mutation(_returns => AffectedRowsOutput_1.AffectedRowsOutput, {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, DeleteManyCourseQuizArgs_1.DeleteManyCourseQuizArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], CourseQuizCrudResolver.prototype, "deleteManyCourseQuiz", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Mutation(_returns => AffectedRowsOutput_1.AffectedRowsOutput, {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, UpdateManyCourseQuizArgs_1.UpdateManyCourseQuizArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], CourseQuizCrudResolver.prototype, "updateManyCourseQuiz", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Mutation(_returns => CourseQuiz_1.CourseQuiz, {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, UpsertCourseQuizArgs_1.UpsertCourseQuizArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], CourseQuizCrudResolver.prototype, "upsertCourseQuiz", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Query(_returns => AggregateCourseQuiz_1.AggregateCourseQuiz, {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, AggregateCourseQuizArgs_1.AggregateCourseQuizArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], CourseQuizCrudResolver.prototype, "aggregateCourseQuiz", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.Query(_returns => [CourseQuizGroupBy_1.CourseQuizGroupBy], {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(1, TypeGraphQL.Info()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Object, Object, GroupByCourseQuizArgs_1.GroupByCourseQuizArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], CourseQuizCrudResolver.prototype, "groupByCourseQuiz", null);
CourseQuizCrudResolver = (0, tslib_1.__decorate)([
    TypeGraphQL.Resolver(_of => CourseQuiz_1.CourseQuiz)
], CourseQuizCrudResolver);
exports.CourseQuizCrudResolver = CourseQuizCrudResolver;
