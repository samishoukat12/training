import { GraphQLResolveInfo } from "graphql";
import { AggregateCourseQuizArgs } from "./args/AggregateCourseQuizArgs";
import { CreateCourseQuizArgs } from "./args/CreateCourseQuizArgs";
import { CreateManyCourseQuizArgs } from "./args/CreateManyCourseQuizArgs";
import { DeleteCourseQuizArgs } from "./args/DeleteCourseQuizArgs";
import { DeleteManyCourseQuizArgs } from "./args/DeleteManyCourseQuizArgs";
import { FindFirstCourseQuizArgs } from "./args/FindFirstCourseQuizArgs";
import { FindManyCourseQuizArgs } from "./args/FindManyCourseQuizArgs";
import { FindUniqueCourseQuizArgs } from "./args/FindUniqueCourseQuizArgs";
import { GroupByCourseQuizArgs } from "./args/GroupByCourseQuizArgs";
import { UpdateCourseQuizArgs } from "./args/UpdateCourseQuizArgs";
import { UpdateManyCourseQuizArgs } from "./args/UpdateManyCourseQuizArgs";
import { UpsertCourseQuizArgs } from "./args/UpsertCourseQuizArgs";
import { CourseQuiz } from "../../../models/CourseQuiz";
import { AffectedRowsOutput } from "../../outputs/AffectedRowsOutput";
import { AggregateCourseQuiz } from "../../outputs/AggregateCourseQuiz";
import { CourseQuizGroupBy } from "../../outputs/CourseQuizGroupBy";
export declare class CourseQuizCrudResolver {
    courseQuiz(ctx: any, info: GraphQLResolveInfo, args: FindUniqueCourseQuizArgs): Promise<CourseQuiz | null>;
    findFirstCourseQuiz(ctx: any, info: GraphQLResolveInfo, args: FindFirstCourseQuizArgs): Promise<CourseQuiz | null>;
    courseQuizs(ctx: any, info: GraphQLResolveInfo, args: FindManyCourseQuizArgs): Promise<CourseQuiz[]>;
    createCourseQuiz(ctx: any, info: GraphQLResolveInfo, args: CreateCourseQuizArgs): Promise<CourseQuiz>;
    createManyCourseQuiz(ctx: any, info: GraphQLResolveInfo, args: CreateManyCourseQuizArgs): Promise<AffectedRowsOutput>;
    deleteCourseQuiz(ctx: any, info: GraphQLResolveInfo, args: DeleteCourseQuizArgs): Promise<CourseQuiz | null>;
    updateCourseQuiz(ctx: any, info: GraphQLResolveInfo, args: UpdateCourseQuizArgs): Promise<CourseQuiz | null>;
    deleteManyCourseQuiz(ctx: any, info: GraphQLResolveInfo, args: DeleteManyCourseQuizArgs): Promise<AffectedRowsOutput>;
    updateManyCourseQuiz(ctx: any, info: GraphQLResolveInfo, args: UpdateManyCourseQuizArgs): Promise<AffectedRowsOutput>;
    upsertCourseQuiz(ctx: any, info: GraphQLResolveInfo, args: UpsertCourseQuizArgs): Promise<CourseQuiz>;
    aggregateCourseQuiz(ctx: any, info: GraphQLResolveInfo, args: AggregateCourseQuizArgs): Promise<AggregateCourseQuiz>;
    groupByCourseQuiz(ctx: any, info: GraphQLResolveInfo, args: GroupByCourseQuizArgs): Promise<CourseQuizGroupBy[]>;
}
