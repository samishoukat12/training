import { Category } from "../../../models/Category";
import { CourseAssignment } from "../../../models/CourseAssignment";
import { CourseBatches } from "../../../models/CourseBatches";
import { CourseQuiz } from "../../../models/CourseQuiz";
import { Courses } from "../../../models/Courses";
import { Lectures } from "../../../models/Lectures";
import { MyCart } from "../../../models/MyCart";
import { MyCourse } from "../../../models/MyCourse";
import { User } from "../../../models/User";
import { CoursesAssignmentArgs } from "./args/CoursesAssignmentArgs";
import { CoursesCartListArgs } from "./args/CoursesCartListArgs";
import { CoursesCourseQuizArgs } from "./args/CoursesCourseQuizArgs";
import { CoursesEnrollListArgs } from "./args/CoursesEnrollListArgs";
import { CoursesLecturesArgs } from "./args/CoursesLecturesArgs";
import { CoursesTotalBatchesArgs } from "./args/CoursesTotalBatchesArgs";
export declare class CoursesRelationsResolver {
    instructor(courses: Courses, ctx: any): Promise<User>;
    courseCategory(courses: Courses, ctx: any): Promise<Category>;
    lectures(courses: Courses, ctx: any, args: CoursesLecturesArgs): Promise<Lectures[]>;
    totalBatches(courses: Courses, ctx: any, args: CoursesTotalBatchesArgs): Promise<CourseBatches[]>;
    assignment(courses: Courses, ctx: any, args: CoursesAssignmentArgs): Promise<CourseAssignment[]>;
    courseQuiz(courses: Courses, ctx: any, args: CoursesCourseQuizArgs): Promise<CourseQuiz[]>;
    enrollList(courses: Courses, ctx: any, args: CoursesEnrollListArgs): Promise<MyCourse[]>;
    cartList(courses: Courses, ctx: any, args: CoursesCartListArgs): Promise<MyCart[]>;
}
