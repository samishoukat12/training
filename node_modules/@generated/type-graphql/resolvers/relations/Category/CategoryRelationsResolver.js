"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CategoryRelationsResolver = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const Category_1 = require("../../../models/Category");
const Courses_1 = require("../../../models/Courses");
const CategoryAllCoursesArgs_1 = require("./args/CategoryAllCoursesArgs");
const helpers_1 = require("../../../helpers");
let CategoryRelationsResolver = class CategoryRelationsResolver {
    async allCourses(category, ctx, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).category.findUnique({
            where: {
                id: category.id,
            },
        }).allCourses(args);
    }
};
(0, tslib_1.__decorate)([
    TypeGraphQL.FieldResolver(_type => [Courses_1.Courses], {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Root()),
    (0, tslib_1.__param)(1, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Category_1.Category, Object, CategoryAllCoursesArgs_1.CategoryAllCoursesArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], CategoryRelationsResolver.prototype, "allCourses", null);
CategoryRelationsResolver = (0, tslib_1.__decorate)([
    TypeGraphQL.Resolver(_of => Category_1.Category)
], CategoryRelationsResolver);
exports.CategoryRelationsResolver = CategoryRelationsResolver;
