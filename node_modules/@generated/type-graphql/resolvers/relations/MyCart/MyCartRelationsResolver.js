"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MyCartRelationsResolver = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const Courses_1 = require("../../../models/Courses");
const MyCart_1 = require("../../../models/MyCart");
const User_1 = require("../../../models/User");
const helpers_1 = require("../../../helpers");
let MyCartRelationsResolver = class MyCartRelationsResolver {
    async courses(myCart, ctx) {
        return (0, helpers_1.getPrismaFromContext)(ctx).myCart.findUnique({
            where: {
                id: myCart.id,
            },
        }).courses({});
    }
    async user(myCart, ctx) {
        return (0, helpers_1.getPrismaFromContext)(ctx).myCart.findUnique({
            where: {
                id: myCart.id,
            },
        }).user({});
    }
};
(0, tslib_1.__decorate)([
    TypeGraphQL.FieldResolver(_type => Courses_1.Courses, {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Root()),
    (0, tslib_1.__param)(1, TypeGraphQL.Ctx()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [MyCart_1.MyCart, Object]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], MyCartRelationsResolver.prototype, "courses", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.FieldResolver(_type => User_1.User, {
        nullable: true
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Root()),
    (0, tslib_1.__param)(1, TypeGraphQL.Ctx()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [MyCart_1.MyCart, Object]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], MyCartRelationsResolver.prototype, "user", null);
MyCartRelationsResolver = (0, tslib_1.__decorate)([
    TypeGraphQL.Resolver(_of => MyCart_1.MyCart)
], MyCartRelationsResolver);
exports.MyCartRelationsResolver = MyCartRelationsResolver;
