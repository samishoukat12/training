"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BlogsRelationsResolver = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const Blogs_1 = require("../../../models/Blogs");
const Comments_1 = require("../../../models/Comments");
const BlogsCommentsArgs_1 = require("./args/BlogsCommentsArgs");
const helpers_1 = require("../../../helpers");
let BlogsRelationsResolver = class BlogsRelationsResolver {
    async comments(blogs, ctx, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).blogs.findUnique({
            where: {
                id: blogs.id,
            },
        }).comments(args);
    }
};
(0, tslib_1.__decorate)([
    TypeGraphQL.FieldResolver(_type => [Comments_1.Comments], {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Root()),
    (0, tslib_1.__param)(1, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Blogs_1.Blogs, Object, BlogsCommentsArgs_1.BlogsCommentsArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], BlogsRelationsResolver.prototype, "comments", null);
BlogsRelationsResolver = (0, tslib_1.__decorate)([
    TypeGraphQL.Resolver(_of => Blogs_1.Blogs)
], BlogsRelationsResolver);
exports.BlogsRelationsResolver = BlogsRelationsResolver;
