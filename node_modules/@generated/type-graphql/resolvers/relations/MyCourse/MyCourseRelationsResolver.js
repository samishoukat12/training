"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MyCourseRelationsResolver = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const CourseBatches_1 = require("../../../models/CourseBatches");
const Courses_1 = require("../../../models/Courses");
const MyCourse_1 = require("../../../models/MyCourse");
const User_1 = require("../../../models/User");
const helpers_1 = require("../../../helpers");
let MyCourseRelationsResolver = class MyCourseRelationsResolver {
    async courses(myCourse, ctx) {
        return (0, helpers_1.getPrismaFromContext)(ctx).myCourse.findUnique({
            where: {
                id: myCourse.id,
            },
        }).courses({});
    }
    async student(myCourse, ctx) {
        return (0, helpers_1.getPrismaFromContext)(ctx).myCourse.findUnique({
            where: {
                id: myCourse.id,
            },
        }).student({});
    }
    async courseBatches(myCourse, ctx) {
        return (0, helpers_1.getPrismaFromContext)(ctx).myCourse.findUnique({
            where: {
                id: myCourse.id,
            },
        }).courseBatches({});
    }
};
(0, tslib_1.__decorate)([
    TypeGraphQL.FieldResolver(_type => Courses_1.Courses, {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Root()),
    (0, tslib_1.__param)(1, TypeGraphQL.Ctx()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [MyCourse_1.MyCourse, Object]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], MyCourseRelationsResolver.prototype, "courses", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.FieldResolver(_type => User_1.User, {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Root()),
    (0, tslib_1.__param)(1, TypeGraphQL.Ctx()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [MyCourse_1.MyCourse, Object]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], MyCourseRelationsResolver.prototype, "student", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.FieldResolver(_type => CourseBatches_1.CourseBatches, {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Root()),
    (0, tslib_1.__param)(1, TypeGraphQL.Ctx()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [MyCourse_1.MyCourse, Object]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], MyCourseRelationsResolver.prototype, "courseBatches", null);
MyCourseRelationsResolver = (0, tslib_1.__decorate)([
    TypeGraphQL.Resolver(_of => MyCourse_1.MyCourse)
], MyCourseRelationsResolver);
exports.MyCourseRelationsResolver = MyCourseRelationsResolver;
