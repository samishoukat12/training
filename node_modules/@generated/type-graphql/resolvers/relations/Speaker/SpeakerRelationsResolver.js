"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SpeakerRelationsResolver = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const Events_1 = require("../../../models/Events");
const Speaker_1 = require("../../../models/Speaker");
const SpeakerEventsArgs_1 = require("./args/SpeakerEventsArgs");
const helpers_1 = require("../../../helpers");
let SpeakerRelationsResolver = class SpeakerRelationsResolver {
    async events(speaker, ctx, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).speaker.findUnique({
            where: {
                id: speaker.id,
            },
        }).events(args);
    }
};
(0, tslib_1.__decorate)([
    TypeGraphQL.FieldResolver(_type => [Events_1.Events], {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Root()),
    (0, tslib_1.__param)(1, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Speaker_1.Speaker, Object, SpeakerEventsArgs_1.SpeakerEventsArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], SpeakerRelationsResolver.prototype, "events", null);
SpeakerRelationsResolver = (0, tslib_1.__decorate)([
    TypeGraphQL.Resolver(_of => Speaker_1.Speaker)
], SpeakerRelationsResolver);
exports.SpeakerRelationsResolver = SpeakerRelationsResolver;
