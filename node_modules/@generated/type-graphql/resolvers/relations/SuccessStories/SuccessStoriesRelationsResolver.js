"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SuccessStoriesRelationsResolver = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const SuccessStories_1 = require("../../../models/SuccessStories");
const User_1 = require("../../../models/User");
const SuccessStoriesUserArgs_1 = require("./args/SuccessStoriesUserArgs");
const helpers_1 = require("../../../helpers");
let SuccessStoriesRelationsResolver = class SuccessStoriesRelationsResolver {
    async user(successStories, ctx, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).successStories.findUnique({
            where: {
                id: successStories.id,
            },
        }).user(args);
    }
};
(0, tslib_1.__decorate)([
    TypeGraphQL.FieldResolver(_type => [User_1.User], {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Root()),
    (0, tslib_1.__param)(1, TypeGraphQL.Ctx()),
    (0, tslib_1.__param)(2, TypeGraphQL.Args()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [SuccessStories_1.SuccessStories, Object, SuccessStoriesUserArgs_1.SuccessStoriesUserArgs]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], SuccessStoriesRelationsResolver.prototype, "user", null);
SuccessStoriesRelationsResolver = (0, tslib_1.__decorate)([
    TypeGraphQL.Resolver(_of => SuccessStories_1.SuccessStories)
], SuccessStoriesRelationsResolver);
exports.SuccessStoriesRelationsResolver = SuccessStoriesRelationsResolver;
