"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CommentsRelationsResolver = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const Blogs_1 = require("../../../models/Blogs");
const Comments_1 = require("../../../models/Comments");
const User_1 = require("../../../models/User");
const helpers_1 = require("../../../helpers");
let CommentsRelationsResolver = class CommentsRelationsResolver {
    async blogs(comments, ctx) {
        return (0, helpers_1.getPrismaFromContext)(ctx).comments.findUnique({
            where: {
                id: comments.id,
            },
        }).blogs({});
    }
    async User(comments, ctx) {
        return (0, helpers_1.getPrismaFromContext)(ctx).comments.findUnique({
            where: {
                id: comments.id,
            },
        }).User({});
    }
};
(0, tslib_1.__decorate)([
    TypeGraphQL.FieldResolver(_type => Blogs_1.Blogs, {
        nullable: false
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Root()),
    (0, tslib_1.__param)(1, TypeGraphQL.Ctx()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Comments_1.Comments, Object]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], CommentsRelationsResolver.prototype, "blogs", null);
(0, tslib_1.__decorate)([
    TypeGraphQL.FieldResolver(_type => User_1.User, {
        nullable: true
    }),
    (0, tslib_1.__param)(0, TypeGraphQL.Root()),
    (0, tslib_1.__param)(1, TypeGraphQL.Ctx()),
    (0, tslib_1.__metadata)("design:type", Function),
    (0, tslib_1.__metadata)("design:paramtypes", [Comments_1.Comments, Object]),
    (0, tslib_1.__metadata)("design:returntype", Promise)
], CommentsRelationsResolver.prototype, "User", null);
CommentsRelationsResolver = (0, tslib_1.__decorate)([
    TypeGraphQL.Resolver(_of => Comments_1.Comments)
], CommentsRelationsResolver);
exports.CommentsRelationsResolver = CommentsRelationsResolver;
