"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EnumPermissionWithAggregatesFilter = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const NestedEnumPermissionFilter_1 = require("../inputs/NestedEnumPermissionFilter");
const NestedEnumPermissionWithAggregatesFilter_1 = require("../inputs/NestedEnumPermissionWithAggregatesFilter");
const NestedIntFilter_1 = require("../inputs/NestedIntFilter");
const Permission_1 = require("../../enums/Permission");
let EnumPermissionWithAggregatesFilter = class EnumPermissionWithAggregatesFilter {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => Permission_1.Permission, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", String)
], EnumPermissionWithAggregatesFilter.prototype, "equals", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [Permission_1.Permission], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], EnumPermissionWithAggregatesFilter.prototype, "in", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [Permission_1.Permission], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], EnumPermissionWithAggregatesFilter.prototype, "notIn", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => NestedEnumPermissionWithAggregatesFilter_1.NestedEnumPermissionWithAggregatesFilter, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", NestedEnumPermissionWithAggregatesFilter_1.NestedEnumPermissionWithAggregatesFilter)
], EnumPermissionWithAggregatesFilter.prototype, "not", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => NestedIntFilter_1.NestedIntFilter, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", NestedIntFilter_1.NestedIntFilter)
], EnumPermissionWithAggregatesFilter.prototype, "_count", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => NestedEnumPermissionFilter_1.NestedEnumPermissionFilter, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", NestedEnumPermissionFilter_1.NestedEnumPermissionFilter)
], EnumPermissionWithAggregatesFilter.prototype, "_min", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => NestedEnumPermissionFilter_1.NestedEnumPermissionFilter, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", NestedEnumPermissionFilter_1.NestedEnumPermissionFilter)
], EnumPermissionWithAggregatesFilter.prototype, "_max", void 0);
EnumPermissionWithAggregatesFilter = (0, tslib_1.__decorate)([
    TypeGraphQL.InputType("EnumPermissionWithAggregatesFilter", {
        isAbstract: true
    })
], EnumPermissionWithAggregatesFilter);
exports.EnumPermissionWithAggregatesFilter = EnumPermissionWithAggregatesFilter;
