"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AttendenceOrderByWithAggregationInput = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const AttendenceCountOrderByAggregateInput_1 = require("../inputs/AttendenceCountOrderByAggregateInput");
const AttendenceMaxOrderByAggregateInput_1 = require("../inputs/AttendenceMaxOrderByAggregateInput");
const AttendenceMinOrderByAggregateInput_1 = require("../inputs/AttendenceMinOrderByAggregateInput");
const SortOrder_1 = require("../../enums/SortOrder");
let AttendenceOrderByWithAggregationInput = class AttendenceOrderByWithAggregationInput {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", String)
], AttendenceOrderByWithAggregationInput.prototype, "id", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", String)
], AttendenceOrderByWithAggregationInput.prototype, "attendence", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", String)
], AttendenceOrderByWithAggregationInput.prototype, "date", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", String)
], AttendenceOrderByWithAggregationInput.prototype, "userId", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => AttendenceCountOrderByAggregateInput_1.AttendenceCountOrderByAggregateInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", AttendenceCountOrderByAggregateInput_1.AttendenceCountOrderByAggregateInput)
], AttendenceOrderByWithAggregationInput.prototype, "_count", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => AttendenceMaxOrderByAggregateInput_1.AttendenceMaxOrderByAggregateInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", AttendenceMaxOrderByAggregateInput_1.AttendenceMaxOrderByAggregateInput)
], AttendenceOrderByWithAggregationInput.prototype, "_max", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => AttendenceMinOrderByAggregateInput_1.AttendenceMinOrderByAggregateInput, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", AttendenceMinOrderByAggregateInput_1.AttendenceMinOrderByAggregateInput)
], AttendenceOrderByWithAggregationInput.prototype, "_min", void 0);
AttendenceOrderByWithAggregationInput = (0, tslib_1.__decorate)([
    TypeGraphQL.InputType("AttendenceOrderByWithAggregationInput", {
        isAbstract: true
    })
], AttendenceOrderByWithAggregationInput);
exports.AttendenceOrderByWithAggregationInput = AttendenceOrderByWithAggregationInput;
