"use strict";
var NestedEnumPermissionFilter_1;
Object.defineProperty(exports, "__esModule", { value: true });
exports.NestedEnumPermissionFilter = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const Permission_1 = require("../../enums/Permission");
let NestedEnumPermissionFilter = NestedEnumPermissionFilter_1 = class NestedEnumPermissionFilter {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => Permission_1.Permission, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", String)
], NestedEnumPermissionFilter.prototype, "equals", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [Permission_1.Permission], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], NestedEnumPermissionFilter.prototype, "in", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [Permission_1.Permission], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], NestedEnumPermissionFilter.prototype, "notIn", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => NestedEnumPermissionFilter_1, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", NestedEnumPermissionFilter)
], NestedEnumPermissionFilter.prototype, "not", void 0);
NestedEnumPermissionFilter = NestedEnumPermissionFilter_1 = (0, tslib_1.__decorate)([
    TypeGraphQL.InputType("NestedEnumPermissionFilter", {
        isAbstract: true
    })
], NestedEnumPermissionFilter);
exports.NestedEnumPermissionFilter = NestedEnumPermissionFilter;
