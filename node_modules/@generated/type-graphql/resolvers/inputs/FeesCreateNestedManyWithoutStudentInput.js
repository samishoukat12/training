"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FeesCreateNestedManyWithoutStudentInput = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const FeesCreateManyStudentInputEnvelope_1 = require("../inputs/FeesCreateManyStudentInputEnvelope");
const FeesCreateOrConnectWithoutStudentInput_1 = require("../inputs/FeesCreateOrConnectWithoutStudentInput");
const FeesCreateWithoutStudentInput_1 = require("../inputs/FeesCreateWithoutStudentInput");
const FeesWhereUniqueInput_1 = require("../inputs/FeesWhereUniqueInput");
let FeesCreateNestedManyWithoutStudentInput = class FeesCreateNestedManyWithoutStudentInput {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [FeesCreateWithoutStudentInput_1.FeesCreateWithoutStudentInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], FeesCreateNestedManyWithoutStudentInput.prototype, "create", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [FeesCreateOrConnectWithoutStudentInput_1.FeesCreateOrConnectWithoutStudentInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], FeesCreateNestedManyWithoutStudentInput.prototype, "connectOrCreate", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => FeesCreateManyStudentInputEnvelope_1.FeesCreateManyStudentInputEnvelope, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", FeesCreateManyStudentInputEnvelope_1.FeesCreateManyStudentInputEnvelope)
], FeesCreateNestedManyWithoutStudentInput.prototype, "createMany", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => [FeesWhereUniqueInput_1.FeesWhereUniqueInput], {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", Array)
], FeesCreateNestedManyWithoutStudentInput.prototype, "connect", void 0);
FeesCreateNestedManyWithoutStudentInput = (0, tslib_1.__decorate)([
    TypeGraphQL.InputType("FeesCreateNestedManyWithoutStudentInput", {
        isAbstract: true
    })
], FeesCreateNestedManyWithoutStudentInput);
exports.FeesCreateNestedManyWithoutStudentInput = FeesCreateNestedManyWithoutStudentInput;
