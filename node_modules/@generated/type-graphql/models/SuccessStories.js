"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SuccessStories = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = (0, tslib_1.__importStar)(require("type-graphql"));
const Status_1 = require("../enums/Status");
const SuccessStoriesCount_1 = require("../resolvers/outputs/SuccessStoriesCount");
let SuccessStories = class SuccessStories {
};
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], SuccessStories.prototype, "id", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], SuccessStories.prototype, "freelancingProfileUrl", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], SuccessStories.prototype, "paymentProof", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], SuccessStories.prototype, "description", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => Status_1.Status, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], SuccessStories.prototype, "status", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], SuccessStories.prototype, "totalEarnedAmount", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], SuccessStories.prototype, "city", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    (0, tslib_1.__metadata)("design:type", String)
], SuccessStories.prototype, "whyReject", void 0);
(0, tslib_1.__decorate)([
    TypeGraphQL.Field(_type => SuccessStoriesCount_1.SuccessStoriesCount, {
        nullable: true
    }),
    (0, tslib_1.__metadata)("design:type", SuccessStoriesCount_1.SuccessStoriesCount)
], SuccessStories.prototype, "_count", void 0);
SuccessStories = (0, tslib_1.__decorate)([
    TypeGraphQL.ObjectType("SuccessStories", {
        isAbstract: true
    })
], SuccessStories);
exports.SuccessStories = SuccessStories;
