"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.relationResolversEnhanceMap = exports.resolversEnhanceMap = exports.AutogeneratedUpdateResolver = exports.AutogeneratedDeleteResolver = exports.AutogeneratedCreateResolver = exports.getAutogeneratedResolvers = void 0;
var type_graphql_1 = require("@generated/type-graphql");
var typedi_1 = __importDefault(require("typedi"));
var type_graphql_2 = require("type-graphql");
var getAutogeneratedResolvers = function () {
    // We have to add auto-generated resolvers to the dependency injection
    // container manually due to a breaking change with TypeDI > 0.8.0
    // https://github.com/MichalLytek/typegraphql-prisma/issues/63
    typedi_1.default.set({ id: type_graphql_1.FindManyUserResolver, type: type_graphql_1.FindManyUserResolver });
    typedi_1.default.set({ id: type_graphql_1.FindManyCoursesResolver, type: type_graphql_1.FindManyCoursesResolver });
    typedi_1.default.set({ id: type_graphql_1.FindManyBlogsResolver, type: type_graphql_1.FindManyBlogsResolver });
    typedi_1.default.set({ id: type_graphql_1.FindManyCommentsResolver, type: type_graphql_1.FindManyCommentsResolver, });
    typedi_1.default.set({ id: type_graphql_1.FindManySuccessStoriesResolver, type: type_graphql_1.FindManySuccessStoriesResolver });
    typedi_1.default.set({ id: type_graphql_1.FindManyEventsResolver, type: type_graphql_1.FindManyEventsResolver });
    typedi_1.default.set({ id: type_graphql_1.FindManyFaqResolver, type: type_graphql_1.FindManyFaqResolver });
    typedi_1.default.set({ id: type_graphql_1.FindManyStaffResolver, type: type_graphql_1.FindManyStaffResolver });
    typedi_1.default.set({ id: type_graphql_1.FindManyContactUsResolver, type: type_graphql_1.FindManyContactUsResolver });
    typedi_1.default.set({ id: type_graphql_1.FindManyStudentsResolver, type: type_graphql_1.FindManyStudentsResolver });
    typedi_1.default.set({ id: type_graphql_1.FindManyEnrollmentApprovalResolver, type: type_graphql_1.FindManyEnrollmentApprovalResolver });
    return [
        type_graphql_1.FindManyUserResolver,
        type_graphql_1.FindManyBlogsResolver,
        type_graphql_1.FindManyCommentsResolver,
        type_graphql_1.FindManySuccessStoriesResolver,
        type_graphql_1.FindManyEventsResolver,
        type_graphql_1.FindManyFaqResolver,
        type_graphql_1.FindManyStaffResolver,
        type_graphql_1.FindManyContactUsResolver,
        type_graphql_1.FindManyStudentsResolver,
        type_graphql_1.FindManyEnrollmentApprovalResolver,
        type_graphql_1.FindManyCoursesResolver
    ];
};
exports.getAutogeneratedResolvers = getAutogeneratedResolvers;
var AutogeneratedCreateResolver = function () {
    typedi_1.default.set({ id: type_graphql_1.CreateManyUserResolver, type: type_graphql_1.CreateManyUserResolver });
    typedi_1.default.set({ id: type_graphql_1.CreateManyBlogsResolver, type: type_graphql_1.CreateManyBlogsResolver });
    typedi_1.default.set({ id: type_graphql_1.CreateManyContactUsResolver, type: type_graphql_1.CreateManyContactUsResolver });
    typedi_1.default.set({ id: type_graphql_1.CreateManyEventsResolver, type: type_graphql_1.CreateManyEventsResolver });
    typedi_1.default.set({ id: type_graphql_1.CreateManySuccessStoriesResolver, type: type_graphql_1.CreateManySuccessStoriesResolver });
    typedi_1.default.set({ id: type_graphql_1.CreateManyStaffResolver, type: type_graphql_1.CreateManyStaffResolver });
    typedi_1.default.set({ id: type_graphql_1.CreateManyStudentsResolver, type: type_graphql_1.CreateManyStudentsResolver });
    typedi_1.default.set({ id: type_graphql_1.CreateManyEnrollmentApprovalResolver, type: type_graphql_1.CreateManyEnrollmentApprovalResolver });
    typedi_1.default.set({ id: type_graphql_1.CreateManyCoursesResolver, type: type_graphql_1.CreateManyCoursesResolver });
    typedi_1.default.set({ id: type_graphql_1.CreateManyFaqResolver, type: type_graphql_1.CreateManyFaqResolver });
    return [
        type_graphql_1.CreateManyBlogsResolver,
        type_graphql_1.CreateManyUserResolver,
        type_graphql_1.CreateManyContactUsResolver,
        type_graphql_1.CreateManyEventsResolver,
        type_graphql_1.CreateManySuccessStoriesResolver,
        type_graphql_1.CreateManyStaffResolver,
        type_graphql_1.CreateManyStudentsResolver,
        type_graphql_1.CreateManyEnrollmentApprovalResolver,
        type_graphql_1.CreateManyCoursesResolver,
        type_graphql_1.CreateManyFaqResolver
    ];
};
exports.AutogeneratedCreateResolver = AutogeneratedCreateResolver;
var AutogeneratedDeleteResolver = function () {
    typedi_1.default.set({ id: type_graphql_1.DeleteManyUserResolver, type: type_graphql_1.DeleteManyUserResolver });
    typedi_1.default.set({ id: type_graphql_1.DeleteManyBlogsResolver, type: type_graphql_1.DeleteManyBlogsResolver });
    typedi_1.default.set({ id: type_graphql_1.DeleteManyCoursesResolver, type: type_graphql_1.DeleteManyCoursesResolver });
    typedi_1.default.set({ id: type_graphql_1.DeleteManyEventsResolver, type: type_graphql_1.DeleteManyEventsResolver });
    typedi_1.default.set({ id: type_graphql_1.DeleteManyContactUsResolver, type: type_graphql_1.DeleteManyContactUsResolver });
    typedi_1.default.set({ id: type_graphql_1.DeleteManyEnrollmentApprovalResolver, type: type_graphql_1.DeleteManyEnrollmentApprovalResolver });
    typedi_1.default.set({ id: type_graphql_1.DeleteManyStaffResolver, type: type_graphql_1.DeleteManyStaffResolver });
    typedi_1.default.set({ id: type_graphql_1.DeleteManyStudentsResolver, type: type_graphql_1.DeleteManyStudentsResolver });
    typedi_1.default.set({ id: type_graphql_1.DeleteManyFaqResolver, type: type_graphql_1.DeleteManyFaqResolver });
    typedi_1.default.set({ id: type_graphql_1.DeleteManySuccessStoriesResolver, type: type_graphql_1.DeleteManySuccessStoriesResolver });
    return [
        type_graphql_1.DeleteManyUserResolver,
        type_graphql_1.DeleteManyBlogsResolver,
        type_graphql_1.DeleteManyCoursesResolver,
        type_graphql_1.DeleteManyEventsResolver,
        type_graphql_1.DeleteManyContactUsResolver,
        type_graphql_1.DeleteManyEnrollmentApprovalResolver,
        type_graphql_1.DeleteManyStaffResolver,
        type_graphql_1.DeleteManyStudentsResolver,
        type_graphql_1.DeleteManyFaqResolver,
        type_graphql_1.DeleteManySuccessStoriesResolver
    ];
};
exports.AutogeneratedDeleteResolver = AutogeneratedDeleteResolver;
var AutogeneratedUpdateResolver = function () {
    typedi_1.default.set({ id: type_graphql_1.UpdateManyUserResolver, type: type_graphql_1.UpdateManyUserResolver });
    typedi_1.default.set({ id: type_graphql_1.UpdateManyCoursesResolver, type: type_graphql_1.UpdateManyCoursesResolver });
    typedi_1.default.set({ id: type_graphql_1.UpdateManyBlogsResolver, type: type_graphql_1.UpdateManyBlogsResolver });
    typedi_1.default.set({ id: type_graphql_1.UpdateManyContactUsResolver, type: type_graphql_1.UpdateManyContactUsResolver });
    typedi_1.default.set({ id: type_graphql_1.UpdateManyEnrollmentApprovalResolver, type: type_graphql_1.UpdateManyEnrollmentApprovalResolver });
    typedi_1.default.set({ id: type_graphql_1.UpdateManyEventsResolver, type: type_graphql_1.UpdateManyEventsResolver });
    typedi_1.default.set({ id: type_graphql_1.UpdateManyStaffResolver, type: type_graphql_1.UpdateManyStaffResolver });
    typedi_1.default.set({ id: type_graphql_1.UpdateManyStudentsResolver, type: type_graphql_1.UpdateManyStudentsResolver });
    typedi_1.default.set({ id: type_graphql_1.UpdateManyFaqResolver, type: type_graphql_1.UpdateManyFaqResolver });
    typedi_1.default.set({ id: type_graphql_1.UpdateManySuccessStoriesResolver, type: type_graphql_1.UpdateManySuccessStoriesResolver });
    return [
        type_graphql_1.UpdateManyUserResolver,
        type_graphql_1.UpdateManyCoursesResolver,
        type_graphql_1.UpdateManyBlogsResolver,
        type_graphql_1.UpdateManyContactUsResolver,
        type_graphql_1.UpdateManyEnrollmentApprovalResolver,
        type_graphql_1.UpdateManyEventsResolver,
        type_graphql_1.UpdateManyStaffResolver,
        type_graphql_1.UpdateManyStudentsResolver,
        type_graphql_1.UpdateManyFaqResolver,
        type_graphql_1.UpdateManySuccessStoriesResolver
    ];
};
exports.AutogeneratedUpdateResolver = AutogeneratedUpdateResolver;
// Authorization guards for auto-generated resolvers from typegraphql-prisma
// https://github.com/MichalLytek/typegraphql-prisma#additional-decorators-for-prisma-schema-resolvers
exports.resolversEnhanceMap = {
    Attendence: {
        attendences: [(0, type_graphql_2.Authorized)()],
    },
    // StoreProduct: {
    //   storeProducts: [Authorized(Role.ApiKey)],
    // },
    // Product: {
    //   products: [Authorized(Role.ApiKey)],
    // },
    // Store: {
    //   createStore: [Authorized(Role.Admin)],
    //   createManyStore: [Authorized(Role.Admin)],
    //   deleteStore: [Authorized(Role.Admin)],
    //   store: [Authorized(Role.ApiKey)],
    //   stores: [Authorized(Role.ApiKey)],
    // },
    // ApiKey: {
    //   apiKeys: [Authorized(Role.Admin)],
    //   deleteManyApiKey: [Authorized(Role.Admin)],
    // },
    // Department: {
    //   department: [Authorized(Role.ApiKey)],
    //   findFirstDepartment: [Authorized(Role.ApiKey)],
    //   departments: [Authorized(Role.ApiKey)],
    //   createDepartment: [Authorized(Role.ApiKey)],
    //   createManyDepartment: [Authorized(Role.Admin), Authorized(Role.ApiKey)],
    //   deleteDepartment: [Authorized(Role.Admin), Authorized(Role.ApiKey)],
    //   updateDepartment: [Authorized(Role.Admin), Authorized(Role.ApiKey)],
    //   deleteManyDepartment: [Authorized(Role.Admin), Authorized(Role.ApiKey)],
    //   updateManyDepartment: [Authorized(Role.Admin), Authorized(Role.ApiKey)],
    //   upsertDepartment: [Authorized(Role.Admin)],
    //   aggregateDepartment: [Authorized(Role.Admin)],
    //   groupByDepartment: [Authorized(Role.Admin)],
    // },
    // Category: {
    //   category: [Authorized(Role.ApiKey)],
    //   findFirstCategory: [Authorized(Role.ApiKey), Authorized(Role.ApiKey)],
    //   categories: [Authorized(Role.ApiKey), Authorized(Role.ApiKey)],
    //   createCategory: [Authorized(Role.Admin), Authorized(Role.ApiKey)],
    //   createManyCategory: [Authorized(Role.Admin), Authorized(Role.ApiKey)],
    //   deleteCategory: [Authorized(Role.Admin), Authorized(Role.ApiKey)],
    //   updateCategory: [Authorized(Role.Admin), Authorized(Role.ApiKey)],
    //   deleteManyCategory: [Authorized(Role.Admin), Authorized(Role.ApiKey)],
    //   updateManyCategory: [Authorized(Role.Admin), Authorized(Role.ApiKey)],
    //   upsertCategory: [Authorized(Role.Admin)],
    //   aggregateCategory: [Authorized(Role.Admin)],
    //   groupByCategory: [Authorized(Role.Admin)],
    // },
    // HomescreenCard: {
    //   homescreenCards: [Authorized(Role.ApiKey)],
    // },
    // ConfigurationParameter: {
    //   findFirstConfigurationParameter: [Authorized()],
    //   configurationParameters: [Authorized()],
    // },
};
exports.relationResolversEnhanceMap = {
// StoreProduct: {
//   cartItems: [Authorized(Role.Admin)],
//   orderItems: [Authorized(Role.Admin)],
// },
// Store: {
//   orders: [Authorized(Role.Admin)],
// },
};
//# sourceMappingURL=autogenerated-resolvers.js.map